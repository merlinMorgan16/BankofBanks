{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\peril\\\\Documents\\\\GitHub\\\\CMPE-131-Group-2\\\\frontend\\\\online-banking\\\\src\\\\pages\\\\AtmFeature.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\n// the cmd line to install this is \n// npm install lucide-react\n// This package is for the icons used in this page\nimport { CornerUpLeft, X } from \"lucide-react\";\nimport { useNavigate } from \"react-router-dom\";\n\n// This will be used as a reference to associate the account type and the balance associated with it\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AtmFeature = () => {\n  _s();\n  // For the side Nav bar to select accounts\n  const [selectedAccount, setSelectedAccount] = useState(\"Savings Account\"); // BACKEND: Change to whatever first account pops up\n  const [hoveredAccount, setHoveredAccount] = useState(null);\n\n  // This is for the hover and active portion of the logout button\n  const [isLogoutHovered, setLogoutIsHovered] = useState(false);\n  const [isLogoutActive, setLogoutIsActive] = useState(false);\n\n  // This is for the hover and active for portion of a button in the grid\n  const actions = ['Withdraw Cash', 'Fund Transfer', 'Deposit Cash', 'Deposit Check', 'View Transactions'];\n  const [isActionBtnHovered, setActionBtnHovered] = useState(null);\n  const [isActionBtnActive, setActionBtnActive] = useState(null);\n  const [activePopup, setActivePopup] = useState(null);\n  const [amount, setAmount] = useState(\"\");\n\n  // This is used for the numpad on the popup display\n  const [isNumpadHover, setNumpadHover] = useState(null);\n  const [isNumpadActive, setNumpadActive] = useState(null);\n\n  // This is for the confirm buttons in the popup \n  const [isConfirmHover, setConfirmHover] = useState(false);\n  const [isConfirmActive, setConfirmActive] = useState(false);\n\n  // This is for the buttons on the fund transfer\n  const [isFundConfirmHover, setFundConfirmHover] = useState(false);\n  const [isFundCancelHover, setFundCancelHover] = useState(false);\n\n  // The logout redirect\n  const navigate = useNavigate();\n  const handleClick = () => {\n    navigate('/AtmLogin');\n  };\n\n  // HARDCODED DATA\n  // BACKEND: Import the data from the database into this format: account type and balance\n  const [balance, setBalances] = useState({\n    \"Savings Account\": 1000,\n    \"Checking Account\": 500\n  });\n\n  // HARDCODED DATA\n  // BACKEND: Fill this array from the data base based on what account the user has \n  const accounts = [\"Savings Account\", \"Checking Account\"];\n\n  // HARDCODED DATA\n  // BACKEND: Import the list of transaction into an list\n  // Right now, when the first user uses the atm, the balance transaction list is empty\n  const [transaction, setTransactions] = useState({\n    \"Savings Account\": [],\n    \"Checking Account\": []\n  });\n\n  // This is for the transfer fund portion of the ATM feature \n  // Right now you can type whoever name you want to transfer and it will work\n  // Later I should add transfer balance between accounts\n  // When sending to another person, we need backend to confirm whoever email is typed is in the database\n  // Afterwards, we will get the full name of the account and confirm \n  const [transferConfirmation, setTransferConfirmation] = useState(false);\n  const [transferRecipient, setTransferRecipient] = useState(\"\");\n  const [transferError, setTransferError] = useState(\"\");\n\n  // Function to say if one of the feature buttons is clicked, therefore, display the popup window\n  const handleActionClick = action => {\n    setActivePopup(action);\n    setAmount(\"\");\n    setTransferConfirmation(false);\n    setTransferRecipient(\"\");\n    setTransferError(\"\");\n  };\n\n  // Input handling for the textbox\n  const handleNumpadClick = value => {\n    if (value === \"C\") {\n      setAmount(\"\");\n      return;\n    }\n    if (value === \".\" && amount.includes(\".\")) return;\n    let newAmount = amount + value;\n    const parts = newAmount.split('.');\n    if (parts.length > 1 && parts[1].length > 2) {\n      return; // Don't add more than 2 decimal places\n    }\n    if (newAmount === \".\") {\n      newAmount = \"0.\";\n    }\n    setAmount(newAmount);\n  };\n\n  // Filtering out inputs that we don't want\n  const handleAmountChange = e => {\n    const value = e.target.value;\n    if (/^\\d*\\.?\\d{0,2}$/.test(value) || value === '') {\n      setAmount(value);\n    }\n  };\n\n  // BACKEND \n  // When the confirmed button is pressed, it will update the following LOCAL variables: TRANSACTION LIST AND CURRENT BALANCE\n  // Each switch statement corresponds to the feature that is active at the moment\n  const handleConfirm = () => {\n    const amountNum = parseFloat(amount);\n    if (isNaN(amountNum)) return;\n    switch (activePopup) {\n      // WITHDRAW\n      case \"Withdraw Cash\":\n        if (amountNum <= balance[selectedAccount]) {\n          setBalances(prev => ({\n            ...prev,\n            [selectedAccount]: prev[selectedAccount] - amountNum\n          }));\n          setTransactions(prev => ({\n            ...prev,\n            [selectedAccount]: [`Withdrawn $${amountNum.toFixed(2)}`, ...prev[selectedAccount]]\n          }));\n        }\n        setActivePopup(null);\n        break;\n\n      // DEPOSIT (same for cash/check)\n      case \"Deposit Cash\":\n      case \"Deposit Check\":\n        setBalances(prev => ({\n          ...prev,\n          [selectedAccount]: prev[selectedAccount] + amountNum\n        }));\n        setTransactions(prev => ({\n          ...prev,\n          [selectedAccount]: [`Deposited $${amountNum.toFixed(2)}`, ...prev[selectedAccount]]\n        }));\n        setActivePopup(null);\n        break;\n\n      // FUND TRANSFER\n      case \"Fund Transfer\":\n        if (!transferConfirmation) {\n          if (transferRecipient) {\n            setTransferConfirmation(true);\n            setTransferError(\"\");\n          } else {\n            setTransferError(\"Please select a recipient account\");\n          }\n        } else if (amountNum <= balance[selectedAccount]) {\n          setBalances(prev => ({\n            ...prev,\n            [selectedAccount]: prev[selectedAccount] - amountNum,\n            [transferRecipient]: prev[transferRecipient] + amountNum\n          }));\n          setTransactions(prev => ({\n            ...prev,\n            [selectedAccount]: [`Transferred $${amountNum.toFixed(2)} to ${transferRecipient}`, ...prev[selectedAccount]],\n            [transferRecipient]: [`Received $${amountNum.toFixed(2)} from ${selectedAccount}`, ...prev[transferRecipient]]\n          }));\n          setActivePopup(null);\n        }\n        break;\n    }\n  };\n\n  // This function is meant for the UI\n  useEffect(() => {\n    switch (activePopup) {\n      case \"Withdraw Cash\":\n      case \"Deposit Cash\":\n      case \"Deposit Check\":\n      case \"Fund Transfer\":\n        setConfirmHover(false);\n        break;\n    }\n  }, [activePopup]);\n\n  // This function shows up the pop up and with the UI content\n  const renderPopup = () => {\n    if (!activePopup) return null;\n    let popupContent;\n    switch (activePopup) {\n      // The popup for \"Withdraw Cash\" and \"Deposit Cash\" are the same\n      case \"Withdraw Cash\":\n      case \"Deposit Cash\":\n        popupContent = /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              fontSize: '1.5rem',\n              fontWeight: 'bold',\n              marginBottom: '1rem'\n            },\n            children: activePopup\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '1rem'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: amount,\n              onChange: handleAmountChange,\n              readOnly: true,\n              style: {\n                width: '95%',\n                height: '40px',\n                padding: '0.5rem',\n                textAlign: 'right',\n                fontSize: '1.5rem',\n                borderRadius: '0.375rem',\n                borderWidth: '2px',\n                borderStyle: 'solid',\n                borderColor: 'black',\n                backgroundColor: 'white',\n                color: 'black'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'grid',\n              gridTemplateColumns: 'repeat(3, 1fr)',\n              gap: '0.5rem'\n            },\n            children: [1, 2, 3, 4, 5, 6, 7, 8, 9, \".\", 0, \"C\"].map(num => /*#__PURE__*/_jsxDEV(\"button\", {\n              // onClick={() => num === \"C\" ? setAmount(\"\") : handleNumpadClick(num.toString())}\n              onClick: () => handleNumpadClick(num.toString()),\n              onMouseEnter: () => setNumpadHover(num),\n              onMouseLeave: () => setNumpadHover(null),\n              onMouseDown: () => setNumpadActive(num),\n              onMouseUp: () => setNumpadActive(null),\n              style: {\n                padding: '1rem',\n                fontSize: '1.25rem',\n                backgroundColor: isNumpadHover === num ? '#cbd5e1' : '#d1d5db',\n                borderRadius: '0.375rem',\n                border: 'none',\n                cursor: 'pointer',\n                transition: 'background-color 0.5s, transform 0.4s ease',\n                transform: isNumpadActive === num ? 'scale(0.95)' : 'scale(1)',\n                color: 'black'\n              },\n              children: num\n            }, num, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleConfirm,\n            onMouseDown: () => setConfirmActive(true),\n            onMouseUp: () => setConfirmActive(false),\n            onMouseEnter: () => setConfirmHover(true),\n            onMouseLeave: () => setConfirmHover(false),\n            style: {\n              marginTop: '1rem',\n              width: '100%',\n              height: '50px',\n              padding: '0.5rem',\n              backgroundColor: isConfirmHover ? '#00171F' : '#003459',\n              color: 'white',\n              borderRadius: '0.375rem',\n              fontSize: '1.25rem',\n              border: 'none',\n              cursor: 'pointer',\n              transition: 'background-color 0.5s, transform 0.4s ease',\n              transform: isConfirmActive ? 'scale(0.95)' : 'scale(1)'\n            },\n            children: \"Confirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n        break;\n      // Pop up for Fund Transfer\n      case \"Fund Transfer\":\n        popupContent = /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              fontSize: '1.5rem',\n              fontWeight: 'bold',\n              marginBottom: '1rem'\n            },\n            children: \"Fund Transfer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this), !transferConfirmation ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginBottom: '1rem'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: amount\n                // readOnly\n                ,\n                onChange: handleAmountChange,\n                style: {\n                  width: '95%',\n                  height: '40px',\n                  padding: '0.5rem',\n                  textAlign: 'right',\n                  fontSize: '1.5rem',\n                  borderRadius: '0.375rem',\n                  borderWidth: '2px',\n                  borderStyle: 'solid',\n                  borderColor: 'black',\n                  backgroundColor: 'white',\n                  color: 'black'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: '1rem',\n                marginBottom: '1rem'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                // This portion hold variables for the transfer reciepient (only between accounts)\n                // Also sets the variable for the selected account that will be used later\n                value: transferRecipient,\n                onChange: e => {\n                  setTransferRecipient(e.target.value);\n                  setTransferError(\"\");\n                },\n                style: {\n                  width: '100%',\n                  height: '50px',\n                  fontSize: '15px',\n                  paddingLeft: '10px',\n                  border: '1px solid #ccc',\n                  borderRadius: '0.375rem',\n                  backgroundColor: 'white',\n                  color: 'black',\n                  borderColor: transferError ? 'red' : 'gray'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select recipient account\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 21\n                }, this), accounts.filter(account => account !== selectedAccount).map(account => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: account,\n                  children: account\n                }, account, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 19\n              }, this), transferError && /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: 'red',\n                  fontSize: '15px'\n                },\n                children: transferError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 38\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'grid',\n                gridTemplateColumns: 'repeat(3, 1fr)',\n                gap: '0.5rem'\n              },\n              children: [1, 2, 3, 4, 5, 6, 7, 8, 9, \".\", 0, \"C\"].map(num => /*#__PURE__*/_jsxDEV(\"button\", {\n                // onClick={() => num === \"C\" ? setAmount(\"\") : handleNumpadClick(num.toString())}\n                onClick: () => handleNumpadClick(num.toString()),\n                onMouseEnter: () => setNumpadHover(num),\n                onMouseLeave: () => setNumpadHover(null),\n                onMouseDown: () => setNumpadActive(num),\n                onMouseUp: () => setNumpadActive(null),\n                style: {\n                  padding: '1rem',\n                  fontSize: '1.25rem',\n                  backgroundColor: isNumpadHover === num ? '#cbd5e1' : '#d1d5db',\n                  borderRadius: '0.375rem',\n                  border: 'none',\n                  cursor: 'pointer',\n                  transition: 'background-color 0.5s, transform 0.4s ease',\n                  transform: isNumpadActive === num ? 'scale(0.95)' : 'scale(1)',\n                  color: 'black'\n                },\n                children: num\n              }, num, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleConfirm,\n              onMouseDown: () => setConfirmActive(true),\n              onMouseUp: () => setConfirmActive(false),\n              onMouseEnter: () => setConfirmHover(true),\n              onMouseLeave: () => setConfirmHover(false),\n              style: {\n                marginTop: '1rem',\n                width: '100%',\n                height: '50px',\n                padding: '0.5rem',\n                backgroundColor: isConfirmHover ? '#00171F' : '#003459',\n                color: 'white',\n                borderRadius: '0.375rem',\n                fontSize: '1.25rem',\n                border: 'none',\n                cursor: 'pointer',\n                transition: 'background-color 0.3s, transform 0.4s ease',\n                transform: isConfirmActive ? 'scale(0.95)' : 'scale(1)'\n              },\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) :\n          /*#__PURE__*/\n          // This is when the \"Next\" button has been clicked\n          _jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: '1.25rem',\n                marginBottom: '1rem'\n              },\n              children: [\"Are you sure you want to transfer $\", amount, \" from \", selectedAccount, \" to \", transferRecipient, \"?\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                justifyContent: 'space-between'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onMouseEnter: () => setFundCancelHover(true),\n                onMouseLeave: () => setFundCancelHover(false),\n                onClick: () => setTransferConfirmation(false),\n                style: {\n                  marginTop: '1rem',\n                  width: '48%',\n                  height: '50px',\n                  padding: '0.5rem',\n                  backgroundColor: isFundCancelHover ? 'darkgray' : '#d1d5db',\n                  color: 'black',\n                  borderRadius: '0.375rem',\n                  fontSize: '1.25rem',\n                  border: 'none',\n                  cursor: 'pointer',\n                  transition: 'background-color 0.5s'\n                },\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleConfirm,\n                onMouseEnter: () => setFundConfirmHover(true),\n                onMouseLeave: () => setFundConfirmHover(false),\n                style: {\n                  marginTop: '1rem',\n                  width: '48%',\n                  height: '50px',\n                  padding: '0.5rem',\n                  backgroundColor: isFundConfirmHover ? '#00171F' : '#003459',\n                  color: 'white',\n                  borderRadius: '0.375rem',\n                  fontSize: '1.25rem',\n                  border: 'none',\n                  cursor: 'pointer',\n                  transition: 'background-color 0.5s'\n                },\n                children: \"Confirm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true);\n        break;\n\n      // This is for the desposit check portion\n      case \"Deposit Check\":\n        popupContent = /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              fontSize: '1.5rem',\n              fontWeight: 'bold',\n              marginBottom: '1rem'\n            },\n            children: \"Deposit Check\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              fontSize: '0.9rem',\n              fontWeight: 'bold'\n            },\n            children: \"Upload Front of Check\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '1rem'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"image/*\",\n              style: {\n                width: '95%',\n                padding: '0.5rem',\n                border: '1px solid #ccc',\n                borderRadius: '0.375rem'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              fontSize: '0.9rem',\n              fontWeight: 'bold'\n            },\n            children: \"Upload Back of Check\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '2rem'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"image/*\",\n              style: {\n                width: '95%',\n                padding: '0.5rem',\n                border: '1px solid #ccc',\n                borderRadius: '0.375rem'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '1rem'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              placeholder: \"Enter check amount\",\n              value: amount,\n              onChange: handleAmountChange,\n              style: {\n                width: '95%',\n                padding: '0.5rem',\n                border: '1px solid #ccc',\n                borderRadius: '0.375rem',\n                height: '30px',\n                fontSize: '0.9rem',\n                borderStyle: 'solid',\n                backgroundColor: 'white',\n                color: 'black'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleConfirm,\n            onMouseDown: () => setConfirmActive(true),\n            onMouseUp: () => setConfirmActive(false),\n            onMouseEnter: () => setConfirmHover(true),\n            onMouseLeave: () => setConfirmHover(false),\n            style: {\n              marginTop: '1rem',\n              width: '100%',\n              height: '50px',\n              padding: '0.5rem',\n              backgroundColor: isConfirmHover ? '#00171F' : '#003459',\n              color: 'white',\n              borderRadius: '0.375rem',\n              fontSize: '1.25rem',\n              border: 'none',\n              cursor: 'pointer',\n              transition: 'background-color 0.3s, transform 0.4s ease',\n              transform: isConfirmActive ? 'scale(0.95)' : 'scale(1)'\n            },\n            children: \"Deposit Check\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n        break;\n\n      // This part is displaying the transaction\n      case \"View Transactions\":\n        popupContent = /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              fontSize: '1.5rem',\n              fontWeight: 'bold',\n              marginBottom: '1rem'\n            },\n            children: \"Recent Transactions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            style: {\n              maxHeight: '16rem',\n              overflowY: 'auto'\n            },\n            children: transaction[selectedAccount].map((transaction, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              style: {\n                padding: '0.5rem',\n                borderBottom: '1px solid #ddd'\n              },\n              children: transaction\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n        break;\n    }\n\n    // This portion is for the 'x' button to escape the popup; backend should NOT care about this part\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        inset: 0,\n        background: 'rgba(0, 0, 0, 0.5)',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: 'white',\n          padding: '2rem',\n          borderRadius: '8px',\n          width: '24rem',\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setActivePopup(null),\n          style: {\n            position: 'absolute',\n            top: '1rem',\n            right: '1rem',\n            width: '40px',\n            height: '40px',\n            backgroundColor: '#d1d5db',\n            color: 'black',\n            borderRadius: '0.375rem',\n            border: 'none',\n            padding: '0.5rem',\n            cursor: 'pointer',\n            transition: 'background-color 0.2s'\n            // ':hover': { backgroundColor: '#9ca3af' }\n          },\n          children: /*#__PURE__*/_jsxDEV(X, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 11\n        }, this), popupContent]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 7\n    }, this);\n  };\n\n  // This is the basic webpage layout\n  return (\n    /*#__PURE__*/\n    // The div below describes basic body style\n    _jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        width: '100%',\n        minHeight: '100vh',\n        overflow: 'hidden',\n        fontFamily: 'sans-serif',\n        background: '#e2e2e2'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '33%',\n          backgroundColor: '#003459',\n          color: 'white',\n          padding: '2rem',\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'space-between',\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              fontSize: '2rem',\n              fontWeight: 'bold',\n              marginBottom: '1rem'\n            },\n            children: \"Welcome, John Doe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              gap: '1rem'\n            },\n            children: accounts.map(account => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setSelectedAccount(account),\n              onMouseEnter: () => setHoveredAccount(account),\n              onMouseLeave: () => setHoveredAccount(null),\n              style: {\n                background: 'transparent',\n                border: 'none',\n                color: selectedAccount === account ? '#003459' : 'white',\n                textAlign: 'left',\n                padding: '1rem',\n                fontSize: '1.2rem',\n                cursor: 'pointer',\n                borderRadius: '5px',\n                transition: 'background-color 0.4s ease, color 0.4s ease',\n                backgroundColor: selectedAccount === account ? 'white' : hoveredAccount === account ? '#809AAC' : 'transparent'\n              },\n              children: account\n            }, account, false, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClick,\n          onMouseEnter: () => setLogoutIsHovered(true),\n          onMouseLeave: () => setLogoutIsHovered(false),\n          onMouseDown: () => setLogoutIsActive(true),\n          onMouseUp: () => setLogoutIsActive(false),\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            color: isLogoutHovered ? '#003459' : 'white',\n            backgroundColor: isLogoutHovered ? \"white\" : \"transparent\",\n            background: 'none',\n            border: '1px solid white',\n            borderRadius: '5px',\n            padding: '0.5rem 1rem',\n            cursor: 'pointer',\n            fontSize: '18px',\n            fontWeight: 'bold',\n            width: '125px',\n            transition: 'background-color 0.4s ease, color 0.4s ease, 0.4s ease',\n            transform: isLogoutActive ? 'scale(0.9)' : 'scale(1)'\n          },\n          children: [/*#__PURE__*/_jsxDEV(CornerUpLeft, {\n            style: {\n              marginRight: '0.5rem'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 11\n          }, this), \" Logout\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '2rem',\n          width: '67%',\n          overflowY: 'auto',\n          marginRight: '1rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            fontSize: '1.5rem',\n            marginBottom: '2rem'\n          },\n          children: selectedAccount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'grid',\n            gridTemplateColumns: 'repeat(2, 1fr)',\n            gap: '1.5rem'\n          },\n          children: actions.map((action, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            //onMouseDown={() => (document.activeElement as HTMLElement).blur()}\n            onClick: () => handleActionClick(action),\n            onMouseEnter: () => setActionBtnHovered(index),\n            onMouseLeave: () => setActionBtnHovered(null),\n            onMouseDown: () => setActionBtnActive(index),\n            onMouseUp: () => setActionBtnActive(null),\n            style: {\n              padding: '2vw',\n              backgroundColor: 'white',\n              borderRadius: '8px',\n              transition: isActionBtnHovered === index ? 'box-shadow 0.3s, transform 0.4s ease' : \"none\",\n              transform: isActionBtnActive === index ? 'scale(0.95)' : 'scale(1)',\n              cursor: 'pointer',\n              gridColumn: action === 'View Transactions' ? 'span 2' : 'auto'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                width: '100%',\n                height: '100%',\n                padding: '1.5rem',\n                background: 'none',\n                color: 'black',\n                border: '1px solid #003459',\n                fontSize: 'calc(0.5rem + 0.5vw)',\n                cursor: 'pointer'\n              },\n              children: action\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 582,\n              columnNumber: 15\n            }, this)\n          }, action, false, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          margin: '2rem ',\n          backgroundColor: 'transparent'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            fontWeight: 'bold',\n            paddingLeft: '2rem',\n            paddingRight: '2rem',\n            fontSize: 'calc(1.5rem + 2vw)'\n          },\n          children: \"Balance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            paddingTop: '2rem',\n            fontSize: 'calc(1rem + 1vw)',\n            fontWeight: 'bold'\n          },\n          children: [\"$\", balance[selectedAccount].toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 7\n      }, this), renderPopup()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(AtmFeature, \"8BMgJo622xCyZl8w93VQoUyI3jg=\", false, function () {\n  return [useNavigate];\n});\n_c = AtmFeature;\nexport default AtmFeature;\nvar _c;\n$RefreshReg$(_c, \"AtmFeature\");","map":{"version":3,"names":["useState","useEffect","CornerUpLeft","X","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","AtmFeature","_s","selectedAccount","setSelectedAccount","hoveredAccount","setHoveredAccount","isLogoutHovered","setLogoutIsHovered","isLogoutActive","setLogoutIsActive","actions","isActionBtnHovered","setActionBtnHovered","isActionBtnActive","setActionBtnActive","activePopup","setActivePopup","amount","setAmount","isNumpadHover","setNumpadHover","isNumpadActive","setNumpadActive","isConfirmHover","setConfirmHover","isConfirmActive","setConfirmActive","isFundConfirmHover","setFundConfirmHover","isFundCancelHover","setFundCancelHover","navigate","handleClick","balance","setBalances","accounts","transaction","setTransactions","transferConfirmation","setTransferConfirmation","transferRecipient","setTransferRecipient","transferError","setTransferError","handleActionClick","action","handleNumpadClick","value","includes","newAmount","parts","split","length","handleAmountChange","e","target","test","handleConfirm","amountNum","parseFloat","isNaN","prev","toFixed","renderPopup","popupContent","children","style","fontSize","fontWeight","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","readOnly","width","height","padding","textAlign","borderRadius","borderWidth","borderStyle","borderColor","backgroundColor","color","display","gridTemplateColumns","gap","map","num","onClick","toString","onMouseEnter","onMouseLeave","onMouseDown","onMouseUp","border","cursor","transition","transform","marginTop","paddingLeft","filter","account","justifyContent","accept","placeholder","maxHeight","overflowY","index","borderBottom","position","inset","background","alignItems","top","right","minHeight","overflow","fontFamily","flexDirection","marginRight","gridColumn","margin","paddingRight","paddingTop","_c","$RefreshReg$"],"sources":["C:/Users/peril/Documents/GitHub/CMPE-131-Group-2/frontend/online-banking/src/pages/AtmFeature.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n// the cmd line to install this is \r\n// npm install lucide-react\r\n// This package is for the icons used in this page\r\nimport { CornerUpLeft, X } from \"lucide-react\"; \r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n// This will be used as a reference to associate the account type and the balance associated with it\r\ninterface AccountBalance {\r\n  [key: string]: number;\r\n}\r\n\r\nconst AtmFeature = () => {\r\n  // For the side Nav bar to select accounts\r\n  const [selectedAccount, setSelectedAccount] = useState<string>(\"Savings Account\"); // BACKEND: Change to whatever first account pops up\r\n  const [hoveredAccount, setHoveredAccount] = useState<string | null>(null);\r\n  \r\n  // This is for the hover and active portion of the logout button\r\n  const [isLogoutHovered, setLogoutIsHovered] = useState(false);\r\n  const [isLogoutActive, setLogoutIsActive] = useState(false);\r\n\r\n  // This is for the hover and active for portion of a button in the grid\r\n  const actions = ['Withdraw Cash', 'Fund Transfer', 'Deposit Cash', 'Deposit Check', 'View Transactions'];\r\n  const [isActionBtnHovered, setActionBtnHovered] = useState<number | null>(null);\r\n  const [isActionBtnActive, setActionBtnActive] = useState<number | null>(null);\r\n\r\n  const [activePopup, setActivePopup] = useState<string | null>(null);\r\n  const [amount, setAmount] = useState<string>(\"\");\r\n  \r\n  // This is used for the numpad on the popup display\r\n  const [isNumpadHover, setNumpadHover] = useState<string | number | null>(null);\r\n  const [isNumpadActive, setNumpadActive] = useState<string | number | null>(null);\r\n\r\n  // This is for the confirm buttons in the popup \r\n  const [isConfirmHover, setConfirmHover] = useState(false);\r\n  const [isConfirmActive, setConfirmActive] = useState(false);\r\n\r\n  // This is for the buttons on the fund transfer\r\n  const [isFundConfirmHover, setFundConfirmHover] = useState(false);\r\n  const [isFundCancelHover, setFundCancelHover] = useState(false);\r\n\r\n  // The logout redirect\r\n  const navigate = useNavigate();\r\n  const handleClick = () => {\r\n    navigate('/AtmLogin');\r\n  };\r\n\r\n  // HARDCODED DATA\r\n  // BACKEND: Import the data from the database into this format: account type and balance\r\n  const [balance, setBalances] = useState<AccountBalance>({\r\n    \"Savings Account\": 1000,\r\n    \"Checking Account\": 500,\r\n  });\r\n\r\n  // HARDCODED DATA\r\n  // BACKEND: Fill this array from the data base based on what account the user has \r\n  const accounts: string[] = [\"Savings Account\", \"Checking Account\"];\r\n \r\n  // HARDCODED DATA\r\n  // BACKEND: Import the list of transaction into an list\r\n  // Right now, when the first user uses the atm, the balance transaction list is empty\r\n  const [transaction, setTransactions] = useState<{ [key: string]: string[] }> ({\r\n    \"Savings Account\": [],\r\n    \"Checking Account\": [],\r\n  });\r\n  \r\n  // This is for the transfer fund portion of the ATM feature \r\n  // Right now you can type whoever name you want to transfer and it will work\r\n  // Later I should add transfer balance between accounts\r\n  // When sending to another person, we need backend to confirm whoever email is typed is in the database\r\n  // Afterwards, we will get the full name of the account and confirm \r\n  const [transferConfirmation, setTransferConfirmation] = useState<boolean>(false);\r\n  const [transferRecipient, setTransferRecipient] = useState<string>(\"\");  \r\n  const [transferError, setTransferError] = useState<string>(\"\");\r\n\r\n\r\n  // Function to say if one of the feature buttons is clicked, therefore, display the popup window\r\n  const handleActionClick = (action: string) => {\r\n    setActivePopup(action);\r\n    setAmount(\"\");\r\n    setTransferConfirmation(false);\r\n    setTransferRecipient(\"\");\r\n    setTransferError(\"\");\r\n  };\r\n\r\n  // Input handling for the textbox\r\n  const handleNumpadClick = (value: string) => {\r\n    if (value === \"C\") {\r\n      setAmount(\"\");\r\n      return;\r\n    }\r\n    \r\n    if (value === \".\" && amount.includes(\".\")) return;\r\n    \r\n    let newAmount = amount + value;\r\n    const parts = newAmount.split('.');\r\n    if (parts.length > 1 && parts[1].length > 2) {\r\n      return; // Don't add more than 2 decimal places\r\n    }\r\n    \r\n    if (newAmount === \".\") {\r\n      newAmount = \"0.\";\r\n    }\r\n    \r\n    setAmount(newAmount);\r\n  };\r\n\r\n  // Filtering out inputs that we don't want\r\n  const handleAmountChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const value = e.target.value;\r\n    if (/^\\d*\\.?\\d{0,2}$/.test(value) || value === '') {\r\n      setAmount(value);\r\n    }\r\n  };\r\n\r\n  // BACKEND \r\n  // When the confirmed button is pressed, it will update the following LOCAL variables: TRANSACTION LIST AND CURRENT BALANCE\r\n  // Each switch statement corresponds to the feature that is active at the moment\r\n  const handleConfirm = () => {\r\n    const amountNum = parseFloat(amount);\r\n    if (isNaN(amountNum)) return;\r\n\r\n    switch (activePopup) {\r\n\r\n      // WITHDRAW\r\n      case \"Withdraw Cash\":\r\n        if (amountNum <= balance[selectedAccount]) {\r\n          setBalances(prev => ({\r\n            ...prev,\r\n            [selectedAccount]: prev[selectedAccount] - amountNum\r\n          }));\r\n          setTransactions(prev => ({\r\n            ...prev,\r\n            [selectedAccount]: [`Withdrawn $${amountNum.toFixed(2)}`, ...prev[selectedAccount]]\r\n          }));\r\n        }\r\n        setActivePopup(null);\r\n        break;\r\n\r\n      // DEPOSIT (same for cash/check)\r\n      case \"Deposit Cash\":\r\n      case \"Deposit Check\":\r\n        setBalances(prev => ({\r\n          ...prev,\r\n          [selectedAccount]: prev[selectedAccount] + amountNum\r\n        }));\r\n        setTransactions(prev => ({\r\n          ...prev,\r\n          [selectedAccount]: [`Deposited $${amountNum.toFixed(2)}`, ...prev[selectedAccount]]\r\n        }));\r\n        setActivePopup(null);\r\n        break;\r\n      \r\n      // FUND TRANSFER\r\n      case \"Fund Transfer\":\r\n        if (!transferConfirmation) {\r\n          if (transferRecipient) {\r\n            setTransferConfirmation(true);\r\n            setTransferError(\"\");\r\n          } else {\r\n            setTransferError(\"Please select a recipient account\");\r\n          }\r\n        } else if (amountNum <= balance[selectedAccount]) {\r\n          setBalances(prev => ({\r\n            ...prev,\r\n            [selectedAccount]: prev[selectedAccount] - amountNum,\r\n            [transferRecipient]: prev[transferRecipient] + amountNum\r\n          }));\r\n          setTransactions(prev => ({\r\n            ...prev,\r\n            [selectedAccount]: [`Transferred $${amountNum.toFixed(2)} to ${transferRecipient}`, ...prev[selectedAccount]],\r\n            [transferRecipient]: [`Received $${amountNum.toFixed(2)} from ${selectedAccount}`, ...prev[transferRecipient]]\r\n          }));\r\n          setActivePopup(null);\r\n        }\r\n        break;\r\n    }\r\n  };\r\n\r\n  // This function is meant for the UI\r\n  useEffect(() => {\r\n    switch(activePopup){\r\n      case \"Withdraw Cash\":\r\n      case \"Deposit Cash\":\r\n      case \"Deposit Check\":\r\n      case \"Fund Transfer\":\r\n        setConfirmHover(false);\r\n        break;\r\n    }\r\n  }, [activePopup]);\r\n\r\n  // This function shows up the pop up and with the UI content\r\n  const renderPopup = () => {\r\n    if (!activePopup) return null;\r\n\r\n    let popupContent;\r\n    switch (activePopup) {\r\n\r\n      // The popup for \"Withdraw Cash\" and \"Deposit Cash\" are the same\r\n      case \"Withdraw Cash\":\r\n      case \"Deposit Cash\":\r\n        popupContent = (\r\n          <>\r\n            <h2 style={{ fontSize: '1.5rem', fontWeight: 'bold', marginBottom: '1rem' }}>{activePopup}</h2>\r\n            \r\n            {/* This is the textbox where we enter the amount */}\r\n            <div style={{ marginBottom: '1rem' }}>\r\n              <input\r\n                type=\"text\"\r\n                value={amount}\r\n                onChange={handleAmountChange}\r\n                readOnly\r\n                style={{width: '95%', height: '40px', padding: '0.5rem', textAlign: 'right', fontSize: '1.5rem', borderRadius: '0.375rem', borderWidth: '2px', borderStyle: 'solid', borderColor: 'black', backgroundColor: 'white', color: 'black',}}\r\n              />\r\n            </div>\r\n\r\n            {/* This is the numpad portion */}\r\n            <div style={{ display: 'grid', gridTemplateColumns: 'repeat(3, 1fr)', gap: '0.5rem' }}>\r\n              {[1, 2, 3, 4, 5, 6, 7, 8, 9, \".\", 0, \"C\"].map((num) => (\r\n                <button\r\n                  key={num}\r\n                  // onClick={() => num === \"C\" ? setAmount(\"\") : handleNumpadClick(num.toString())}\r\n                  onClick={() => handleNumpadClick(num.toString())}\r\n                  onMouseEnter={() => setNumpadHover(num)}\r\n                  onMouseLeave={() => setNumpadHover(null)}\r\n                  onMouseDown={() => setNumpadActive(num)}\r\n                  onMouseUp={() => setNumpadActive(null)}\r\n                  style={{padding: '1rem', fontSize: '1.25rem', backgroundColor: isNumpadHover === num ? '#cbd5e1' : '#d1d5db', borderRadius: '0.375rem', border: 'none', cursor: 'pointer', transition: 'background-color 0.5s, transform 0.4s ease', transform: isNumpadActive === num ? 'scale(0.95)' : 'scale(1)', color: 'black',}}\r\n                >\r\n                  {num}\r\n                </button>\r\n              ))}\r\n            </div>\r\n\r\n            {/* The confirm button */}\r\n            <button\r\n              onClick={handleConfirm}\r\n              onMouseDown={() => setConfirmActive(true)}\r\n              onMouseUp={() => setConfirmActive(false)}\r\n              onMouseEnter={() => setConfirmHover(true)}\r\n              onMouseLeave={() => setConfirmHover(false)}\r\n              style={{marginTop: '1rem', width: '100%', height: '50px', padding: '0.5rem', backgroundColor: isConfirmHover ? '#00171F' : '#003459', color: 'white', borderRadius: '0.375rem', fontSize: '1.25rem', border: 'none', cursor: 'pointer', transition: 'background-color 0.5s, transform 0.4s ease', transform: isConfirmActive ? 'scale(0.95)' : 'scale(1)',}}\r\n            >\r\n              Confirm\r\n            </button>\r\n          </>\r\n        );\r\n        break;\r\n      // Pop up for Fund Transfer\r\n      case \"Fund Transfer\":\r\n        popupContent = (\r\n          <>\r\n            <h2 style={{ fontSize: '1.5rem', fontWeight: 'bold', marginBottom: '1rem' }}>Fund Transfer</h2>\r\n\r\n            {/* This boolean handles if the \"Next\" button has been clicked or not.\r\n            Therefore, if the button has been clicked, it will prompt the seperate\r\n            confirmation popup to confirm the fund transfer.\r\n            If not, it will pop up the normal popup to choose which account to transfer money to\r\n            and how much money.  */}\r\n            {!transferConfirmation ? (\r\n              <>\r\n                {/* This is the textbox where we enter the amount */}\r\n                <div style={{ marginBottom: '1rem' }}>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={amount}\r\n                    // readOnly\r\n                    onChange={handleAmountChange}\r\n                    style={{width: '95%', height: '40px', padding: '0.5rem', textAlign: 'right', fontSize: '1.5rem', borderRadius: '0.375rem', borderWidth: '2px', borderStyle: 'solid', borderColor: 'black', backgroundColor: 'white', color: 'black',}}\r\n                  />\r\n                </div>\r\n\r\n                {/* This is the selecting the recipient */}\r\n                <div style={{ marginTop: '1rem', marginBottom: '1rem' }}>\r\n                  <select\r\n\r\n                    // This portion hold variables for the transfer reciepient (only between accounts)\r\n                    // Also sets the variable for the selected account that will be used later\r\n                    value={transferRecipient}\r\n                    onChange={(e) => {\r\n                      setTransferRecipient(e.target.value);\r\n                      setTransferError(\"\");\r\n                    }}\r\n                    style={{width: '100%', height: '50px', fontSize: '15px', paddingLeft: '10px',border: '1px solid #ccc',borderRadius: '0.375rem',backgroundColor: 'white',color: 'black',borderColor: transferError ? 'red' : 'gray',}}\r\n                  >\r\n\r\n                    {/* Drop down box to select an account  */}\r\n                    <option value=\"\">Select recipient account</option>\r\n                    {accounts.filter(account => account !== selectedAccount).map(account => (\r\n                      <option key={account} value={account}>{account}</option>\r\n                    ))}\r\n                  </select>\r\n\r\n                  {/* This says if there is no account selected, and the is some amount enter, prompt an error   */}\r\n                  {transferError && (<p style={{color: 'red', fontSize: '15px'}}>{transferError}</p>)}\r\n                </div>\r\n\r\n                {/* This is the numpad */}\r\n                <div style={{ display: 'grid', gridTemplateColumns: 'repeat(3, 1fr)', gap: '0.5rem' }}>\r\n                  {[1, 2, 3, 4, 5, 6, 7, 8, 9, \".\", 0, \"C\"].map((num) => (\r\n                    <button\r\n                      key={num}\r\n                      // onClick={() => num === \"C\" ? setAmount(\"\") : handleNumpadClick(num.toString())}\r\n                      onClick={() => handleNumpadClick(num.toString())}\r\n                      onMouseEnter={() => setNumpadHover(num)}\r\n                      onMouseLeave={() => setNumpadHover(null)}\r\n                      onMouseDown={() => setNumpadActive(num)}\r\n                      onMouseUp={() => setNumpadActive(null)}\r\n                      style={{padding: '1rem',fontSize: '1.25rem',backgroundColor: isNumpadHover === num ? '#cbd5e1' : '#d1d5db',borderRadius: '0.375rem',border: 'none',cursor: 'pointer',transition: 'background-color 0.5s, transform 0.4s ease',transform: isNumpadActive === num ? 'scale(0.95)' : 'scale(1)',color: 'black',}}\r\n                    >\r\n                      {num}\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n\r\n                {/* This is the next button  */}\r\n                <button\r\n                  onClick={handleConfirm}\r\n                  onMouseDown={() => setConfirmActive(true)}\r\n                  onMouseUp={() => setConfirmActive(false)}\r\n                  onMouseEnter={() => setConfirmHover(true)}\r\n                  onMouseLeave={() => setConfirmHover(false)}\r\n                  style={{marginTop: '1rem',width: '100%',height: '50px',padding: '0.5rem',backgroundColor: isConfirmHover ? '#00171F' : '#003459',color: 'white',borderRadius: '0.375rem',fontSize: '1.25rem',border: 'none',cursor: 'pointer',transition: 'background-color 0.3s, transform 0.4s ease',transform: isConfirmActive ? 'scale(0.95)' : 'scale(1)',}}\r\n                >\r\n                  Next\r\n                </button>\r\n              </>\r\n            ) : (\r\n\r\n              // This is when the \"Next\" button has been clicked\r\n              <>\r\n                <p style={{ fontSize: '1.25rem', marginBottom: '1rem' }}>\r\n                  Are you sure you want to transfer ${amount} from {selectedAccount} to {transferRecipient}?\r\n                </p>\r\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n\r\n                  {/* The cancel button portion  */}\r\n                  <button\r\n                    onMouseEnter={() => setFundCancelHover(true)}\r\n                    onMouseLeave={() => setFundCancelHover(false)}\r\n                    onClick={() => setTransferConfirmation(false)}\r\n                    style={{marginTop: '1rem',width: '48%',height: '50px',padding: '0.5rem',backgroundColor: isFundCancelHover ? 'darkgray' : '#d1d5db',color: 'black',borderRadius: '0.375rem',fontSize: '1.25rem',border: 'none',cursor: 'pointer',transition: 'background-color 0.5s',}}\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n\r\n                  {/* The confirm button portion */}\r\n                  <button\r\n                    onClick={handleConfirm}             \r\n                    onMouseEnter={() => setFundConfirmHover(true)}\r\n                    onMouseLeave={() => setFundConfirmHover(false)}\r\n                    style={{marginTop: '1rem',width: '48%',height: '50px',padding: '0.5rem',backgroundColor: isFundConfirmHover ? '#00171F' : '#003459',color: 'white',borderRadius: '0.375rem',fontSize: '1.25rem',border: 'none',cursor: 'pointer',transition: 'background-color 0.5s',}}\r\n                  >\r\n                    Confirm\r\n                  </button>\r\n                </div>\r\n              </>\r\n            )}\r\n          </>\r\n        );\r\n        break;\r\n      \r\n      // This is for the desposit check portion\r\n      case \"Deposit Check\":\r\n        popupContent = (\r\n          <>\r\n            <h2 style={{ fontSize: '1.5rem', fontWeight: 'bold', marginBottom: '1rem' }}>Deposit Check</h2>\r\n            \r\n            {/* Front of check image insert; having these pictures will do absolutely NOTHING*/}\r\n            <h3 style={{ fontSize: '0.9rem', fontWeight: 'bold'}}>Upload Front of Check</h3>\r\n            <div style={{ marginBottom: '1rem' }}>\r\n              <input\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                style={{width: '95%',padding: '0.5rem',border: '1px solid #ccc',borderRadius: '0.375rem'\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            {/* Back of check image insertion; having these pictures will do absolutely NOTHING*/}\r\n            <h3 style={{ fontSize: '0.9rem', fontWeight: 'bold'}}>Upload Back of Check</h3>\r\n            <div style={{ marginBottom: '2rem' }}>\r\n              <input\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                style={{width: '95%',padding: '0.5rem',border: '1px solid #ccc',borderRadius: '0.375rem'\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            {/* The input textbox */}\r\n            <div style={{ marginBottom: '1rem' }}>\r\n              <input\r\n                type=\"number\"\r\n                placeholder=\"Enter check amount\"\r\n                value={amount}\r\n                onChange={handleAmountChange}\r\n                style={{width: '95%',padding: '0.5rem',border: '1px solid #ccc',borderRadius: '0.375rem',height: '30px',fontSize: '0.9rem',borderStyle: 'solid',backgroundColor: 'white',color: 'black',}}\r\n              />\r\n            </div>\r\n\r\n            {/* Confirmation Button */}\r\n            <button\r\n              onClick={handleConfirm}\r\n              onMouseDown={() => setConfirmActive(true)}\r\n              onMouseUp={() => setConfirmActive(false)}\r\n              onMouseEnter={() => setConfirmHover(true)}\r\n              onMouseLeave={() => setConfirmHover(false)}\r\n              style={{marginTop: '1rem',width: '100%',height: '50px',padding: '0.5rem',backgroundColor: isConfirmHover ? '#00171F' : '#003459',color: 'white',borderRadius: '0.375rem',fontSize: '1.25rem',border: 'none',cursor: 'pointer',transition: 'background-color 0.3s, transform 0.4s ease',transform: isConfirmActive ? 'scale(0.95)' : 'scale(1)',}}\r\n            >\r\n              Deposit Check\r\n            </button>\r\n          </>\r\n        );\r\n        break;\r\n\r\n      // This part is displaying the transaction\r\n      case \"View Transactions\":\r\n        popupContent = (\r\n          <>\r\n            <h2 style={{ fontSize: '1.5rem', fontWeight: 'bold', marginBottom: '1rem' }}>Recent Transactions</h2>\r\n            <ul style={{ maxHeight: '16rem', overflowY: 'auto' }}>\r\n              {transaction[selectedAccount].map((transaction, index) => (\r\n                <li key={index} style={{ padding: '0.5rem', borderBottom: '1px solid #ddd' }}>{transaction}</li>\r\n              ))}\r\n            </ul>\r\n          </>\r\n        );\r\n        break;\r\n    }\r\n\r\n    // This portion is for the 'x' button to escape the popup; backend should NOT care about this part\r\n    return (\r\n      <div style={{\r\n        position: 'fixed',\r\n        inset: 0,\r\n        background: 'rgba(0, 0, 0, 0.5)',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n      }}>\r\n        <div style={{\r\n          background: 'white',\r\n          padding: '2rem',\r\n          borderRadius: '8px',\r\n          width: '24rem',\r\n          position: 'relative'\r\n        }}>\r\n          <button\r\n            onClick={() => setActivePopup(null)}\r\n            style={{\r\n              position: 'absolute',\r\n              top: '1rem',\r\n              right: '1rem',\r\n              width: '40px',\r\n              height: '40px',\r\n              backgroundColor: '#d1d5db',\r\n              color: 'black',\r\n              borderRadius: '0.375rem',\r\n              border: 'none',\r\n              padding: '0.5rem',\r\n              cursor: 'pointer',\r\n              transition: 'background-color 0.2s',\r\n              // ':hover': { backgroundColor: '#9ca3af' }\r\n            }}>\r\n            <X></X>\r\n          </button>\r\n          {popupContent}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // This is the basic webpage layout\r\n  return (\r\n    // The div below describes basic body style\r\n    <div style={{ display: 'flex', width: '100%', minHeight: '100vh', overflow: 'hidden', fontFamily: 'sans-serif', background: '#e2e2e2' }}>\r\n\r\n      {/* The div below will describe the nav bar on the lefthand side\r\n      That Nav bar will consist of selecting the account, the name of the person, selecting accounts, and a logout button */}\r\n      <div style={{ width: '33%', backgroundColor: '#003459', color: 'white', padding: '2rem', display: 'flex', flexDirection: 'column', justifyContent: 'space-between', position: 'relative' }}>\r\n        <div>\r\n\r\n          {/* There is a hardcoded name but later connect the backend to retrieve that data */}\r\n          <h1 style={{ fontSize: '2rem', fontWeight: 'bold', marginBottom: '1rem' }}>\r\n            Welcome, John Doe\r\n          </h1>\r\n\r\n          {/* Nav bar portion  */}\r\n          <nav style={{ display: 'flex', flexDirection: 'column', gap: '1rem' }}>\r\n            {accounts.map((account) => (\r\n              <button\r\n                key={account}\r\n                onClick={() => setSelectedAccount(account)}\r\n                onMouseEnter={() => setHoveredAccount(account)}\r\n                onMouseLeave={() => setHoveredAccount(null)}\r\n                style={{\r\n                  background: 'transparent',\r\n                  border: 'none',\r\n                  color: selectedAccount === account ? '#003459' : 'white',\r\n                  textAlign: 'left',\r\n                  padding: '1rem',\r\n                  fontSize: '1.2rem',\r\n                  cursor: 'pointer',\r\n                  borderRadius: '5px',\r\n                  transition: 'background-color 0.4s ease, color 0.4s ease',\r\n                  backgroundColor:\r\n                    selectedAccount === account\r\n                      ? 'white'\r\n                      : hoveredAccount === account\r\n                      ? '#809AAC' \r\n                      : 'transparent',             \r\n                }}>\r\n                {account}\r\n              </button>\r\n            ))}\r\n          </nav>\r\n        </div>\r\n\r\n        {/* Logout button portion */}\r\n        <button \r\n\r\n          onClick={handleClick}\r\n\r\n          onMouseEnter={() => setLogoutIsHovered(true)}\r\n          onMouseLeave={() => setLogoutIsHovered(false)}\r\n          onMouseDown={() => setLogoutIsActive(true)}\r\n          onMouseUp={() => setLogoutIsActive(false)}\r\n\r\n          style={{ \r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'center', \r\n            color: isLogoutHovered ? '#003459' : 'white', \r\n            backgroundColor: isLogoutHovered ? \"white\" : \"transparent\",\r\n            background: 'none', \r\n            border: '1px solid white', \r\n            borderRadius: '5px', \r\n            padding: '0.5rem 1rem', \r\n            cursor: 'pointer', \r\n            fontSize: '18px', \r\n            fontWeight: 'bold', \r\n            width: '125px', \r\n            transition: 'background-color 0.4s ease, color 0.4s ease, 0.4s ease',\r\n            transform: isLogoutActive ? 'scale(0.9)' : 'scale(1)'\r\n            }}>\r\n\r\n          <CornerUpLeft style={{ marginRight: '0.5rem' }} /> Logout\r\n        </button>\r\n      </div>\r\n\r\n      {/* This div contains holding the button features*/}\r\n      <div style={{ padding: '2rem', width: '67%', overflowY: 'auto', marginRight: '1rem' }}>\r\n\r\n        {/* Header to display what accout is selected */}\r\n        <h2 style={{ fontSize: '1.5rem', marginBottom: '2rem' }}>{selectedAccount}</h2>\r\n\r\n        {/* This is the div grid that allows the user to select which feature to choose from */}\r\n        <div style={{ display: 'grid', gridTemplateColumns: 'repeat(2, 1fr)', gap: '1.5rem' }}>\r\n          {actions.map((action, index) => (\r\n            <div\r\n\r\n              //onMouseDown={() => (document.activeElement as HTMLElement).blur()}\r\n              onClick={() => handleActionClick(action)}\r\n              key={action}\r\n\r\n              onMouseEnter={() => setActionBtnHovered(index)}\r\n              onMouseLeave={() => setActionBtnHovered(null)}\r\n              onMouseDown={() => setActionBtnActive(index)}\r\n              onMouseUp={() => setActionBtnActive(null)}\r\n\r\n              style={{\r\n                padding: '2vw',\r\n                backgroundColor: 'white',\r\n                borderRadius: '8px',\r\n                transition: isActionBtnHovered === index ? 'box-shadow 0.3s, transform 0.4s ease' : \"none\",\r\n                transform: isActionBtnActive === index ? 'scale(0.95)' : 'scale(1)',\r\n                cursor: 'pointer',\r\n                gridColumn: action === 'View Transactions' ? 'span 2' : 'auto',\r\n              }}>\r\n\r\n              <button \r\n                style={{ \r\n                  width: '100%', \r\n                  height: '100%', \r\n                  padding: '1.5rem', \r\n                  background: 'none',\r\n                  color: 'black', \r\n                  border: '1px solid #003459', \r\n                  fontSize: 'calc(0.5rem + 0.5vw)', \r\n                  cursor: 'pointer' \r\n                  }}>\r\n                {action}\r\n              </button>\r\n\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* The div below is the ones that display the current balance of the account */}\r\n      <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center', margin: '2rem ', backgroundColor: 'transparent' }}>\r\n        <h1 style={{ fontWeight: 'bold', paddingLeft: '2rem', paddingRight: '2rem', fontSize: 'calc(1.5rem + 2vw)' }}>\r\n          Balance\r\n        </h1>\r\n        <h2 style={{ paddingTop: '2rem', fontSize: 'calc(1rem + 1vw)', fontWeight: 'bold' }}>\r\n         ${balance[selectedAccount].toFixed(2)}\r\n        </h2>\r\n      </div>\r\n\r\n      {renderPopup()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AtmFeature;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}