{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\peril\\\\Documents\\\\GitHub\\\\CMPE-131-Group-2\\\\frontend\\\\online-banking\\\\src\\\\pages\\\\Registration.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Registration = () => {\n  _s();\n  // Declare states to store the values ​​of input fields\n  const [LastName, setLastName] = useState(''); //user's Last name \n  const [FirstName, setFirstName] = useState(''); // First name\n  const [Username, setUsername] = useState(''); // user login name\n  const [Email, setEmail] = useState(''); //email\n  const [Password, setPw] = useState(''); //password\n  const [ConfirmPassword, setConfirmPw] = useState(''); //Confirm Password\n  const [Pin, setPin] = useState(''); //Pin\n  const [ConfirmPin, setConfirmPin] = useState(''); //Confirm PIN\n  const [errorMssg, setErrorMssg] = useState(''); //Error messages\n  const [successMssg, setSuccessMssg] = useState(''); //success messages\n  const navigate = useNavigate();\n\n  // The validateInput function checks the validity of user input data\n  const validateInput = () => {\n    // Check email format\n    if (!/^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$/.test(Email)) {\n      setErrorMssg('Invalid email format.');\n      return false;\n    }\n    const validChars = /^[A-Za-z0-9!*]*$/;\n    // Check valid characters in Username and Password\n    if (!validChars.test(Username) || !validChars.test(Password)) {\n      setErrorMssg('Please try again!');\n      return false;\n    }\n    // Check if Password and ConfirmPassword match\n    if (Password !== ConfirmPassword) {\n      setErrorMssg('Password and Confirm Password do not match.');\n      return false;\n    }\n    // Check if Pin and ConfirmPin match\n    if (Pin !== ConfirmPin) {\n      setErrorMssg('PIN and Confirm PIN do not match.');\n      return false;\n    }\n    return true;\n  };\n\n  // Function to handle when the user submits the form\n  const submission = async event => {\n    event.preventDefault();\n    // Stop if data is invalid\n    if (!validateInput()) {\n      return;\n    }\n    try {\n      // Send a request to check if the email already exists\n      const emailCheckResponse = await axios.get('http://localhost:3000', {\n        params: {\n          email: Email\n        }\n      });\n\n      // Send new account registration request\n      await axios.post('http://localhost:3000/registration', {\n        LastName,\n        FirstName,\n        Username,\n        Email,\n        Password,\n        Pin\n      });\n      // Successful registration notification and redirection to Hompage\n      setSuccessMssg('Congratulations! Registration successful!');\n      setErrorMssg('');\n    } catch (error) {\n      // Handle errors when registration fails\n      setErrorMssg('Registration failed. Please try again.');\n      setSuccessMssg('');\n    }\n  };\n  const handleCancel = () => {\n    navigate('/Homepage'); // return to homepage\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      fontFamily: 'Arial, sans-serif',\n      margin: 0\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        style: {\n          backgroundColor: '#003459',\n          padding: '30px',\n          color: 'white',\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            fontWeight: 'bold',\n            fontSize: '30px'\n          },\n          children: \"Bank of Banks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: 'center',\n        fontWeight: 'normal',\n        fontSize: '25px',\n        marginTop: '20px'\n      },\n      children: \"Welcome, apply in just minutes.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submission,\n      style: {\n        display: 'grid',\n        gridTemplateColumns: '1fr 1fr',\n        gap: '20px',\n        // Added gap between elements\n        maxWidth: '600px',\n        margin: '20px auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"First Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          //for the First Name\n          type: \"text\",\n          value: FirstName,\n          onChange: e => setFirstName(e.target.value),\n          required: true,\n          style: {\n            padding: '10px',\n            backgroundColor: '#D3D3D3',\n            fontSize: '20px',\n            borderRadius: '4px',\n            border: '1px solid #809AAC',\n            width: '100%',\n            marginTop: '5px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Last Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          //for the Last Name\n          type: \"text\",\n          value: LastName,\n          onChange: e => setLastName(e.target.value),\n          required: true,\n          style: {\n            padding: '10px',\n            backgroundColor: '#D3D3D3',\n            fontSize: '20px',\n            borderRadius: '4px',\n            border: '1px solid #809AAC',\n            width: '100%',\n            marginTop: '5px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          gridColumn: '1 / 3',\n          margin: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          //for the username\n          type: \"text\",\n          value: Username,\n          onChange: e => setUsername(e.target.value),\n          required: true,\n          style: {\n            padding: '10px',\n            backgroundColor: '#D3D3D3',\n            fontSize: '20px',\n            borderRadius: '4px',\n            border: '1px solid #809AAC',\n            width: '100%',\n            marginTop: '5px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          gridColumn: '1 / 3',\n          margin: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          //for the Email \n          type: \"email\",\n          value: Email,\n          onChange: e => setEmail(e.target.value),\n          required: true,\n          style: {\n            padding: '10px',\n            backgroundColor: '#D3D3D3',\n            fontSize: '20px',\n            borderRadius: '4px',\n            border: '1px solid #809AAC',\n            width: '100%',\n            marginTop: '5px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          //for the password\n          type: \"password\",\n          value: Password,\n          onChange: e => setPw(e.target.value),\n          required: true,\n          style: {\n            padding: '10px',\n            backgroundColor: '#D3D3D3',\n            fontSize: '20px',\n            borderRadius: '4px',\n            border: '1px solid #809AAC',\n            width: '100%',\n            marginTop: '5px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Confirm Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          //for the confirmPassword\n          type: \"password\",\n          value: ConfirmPassword,\n          onChange: e => setConfirmPw(e.target.value),\n          required: true,\n          style: {\n            padding: '10px',\n            backgroundColor: '#D3D3D3',\n            fontSize: '20px',\n            borderRadius: '4px',\n            border: '1px solid #809AAC',\n            width: '100%',\n            marginTop: '5px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"PIN:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          //for the PIN\n          type: \"password\",\n          value: Pin,\n          onChange: e => setPin(e.target.value),\n          required: true,\n          maxLength: 4,\n          style: {\n            padding: '10px',\n            backgroundColor: '#D3D3D3',\n            fontSize: '20px',\n            borderRadius: '4px',\n            border: '1px solid #809AAC',\n            width: '100%',\n            marginTop: '5px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Confirm PIN:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          //for the confirmPIN\n          type: \"password\",\n          value: ConfirmPin,\n          onChange: e => setConfirmPin(e.target.value),\n          required: true,\n          maxLength: 4,\n          style: {\n            padding: '10px',\n            backgroundColor: '#D3D3D3',\n            fontSize: '20px',\n            borderRadius: '4px',\n            border: '1px solid #809AAC',\n            width: '100%',\n            marginTop: '5px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          gridColumn: '1 / 3',\n          textAlign: 'center',\n          marginTop: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          style: {\n            width: '30%',\n            padding: '10px',\n            backgroundColor: '#003459',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer',\n            fontWeight: 'bold',\n            fontSize: '16px'\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 17\n      }, this), errorMssg && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red',\n          textAlign: 'center',\n          gridColumn: '1 / 3'\n        },\n        children: errorMssg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 31\n      }, this), successMssg && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'green',\n          textAlign: 'center',\n          gridColumn: '1 / 3'\n        },\n        children: successMssg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        margin: '20px auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/\",\n        onClick: handleCancel,\n        style: {\n          color: 'blue',\n          textDecoration: 'underline'\n        },\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" | \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 17\n      }, this), \"//\", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/\",\n        style: {\n          color: 'blue',\n          textDecoration: 'underline'\n        },\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n_s(Registration, \"q8rVSeiKSkJFufqAxq/rtMhmkzI=\", false, function () {\n  return [useNavigate];\n});\n_c = Registration;\nexport default Registration;\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n// import './Registration.css';\n\n// const Registration = () => {\n//     const [LastName, setLastName] = useState<string>('');\n//     const [FirstName, setFirstName] = useState<string>('');\n//     const [Username, setUsername] = useState<string>('');\n//     const [Email, setEmail] = useState<string>('');\n//     const [Password, setPw] = useState<string>('');\n//     const [ConfirmPassword, setConfirmPw] = useState<string>('');\n//     const [errorMssg, setErrorMssg] = useState<string>('');\n//     const [successMssg, setSuccessMssg] = useState<string>('');\n//     const navigate = useNavigate(); \n\n//     const validateInput = () => {\n//         // test email\n//         if (!/^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$/.test(Email)) {\n//             setErrorMssg('Invalid email format.');\n//             return false;\n//         }\n\n//         // test username/password\n//         const validChars = /^[A-Za-z0-9!*]*$/;\n//         if (!validChars.test(Username) || !validChars.test(Password)) {\n//             setErrorMssg('Username and password must contain only A-Z, a-z, 0-9, or !-* characters.');\n//             return false;\n//         }\n\n//         if (Password !== ConfirmPassword) {\n//             setErrorMssg('Password and Confirm Password do not match.');\n//             return false;\n//         }\n\n//         return true;\n//     };\n\n//     const submission = async (event: React.FormEvent<HTMLFormElement>) => {\n//         event.preventDefault();\n\n//         if (!validateInput()) {\n//             return; \n//         }\n\n//         try {\n//             const emailCheckResponse = await axios.get(`http://localhost:3000}`);\n\n//             if (emailCheckResponse.data.exists) {\n//                 setErrorMssg('Email is already registered!');\n//                 setSuccessMssg('');\n//                 return;\n//             }\n\n//             await axios.post('http://localhost:3000/registration', {\n//                 LastName,\n//                 FirstName,\n//                 Username,\n//                 Email,\n//                 Password,\n//             });\n\n//             setSuccessMssg('Congratulation! Registration successful!'); \n//             setErrorMssg('');\n\n//             navigate('/Homepage'); \n//         } catch (error) { \n//             setErrorMssg('Registration failed. Please try again.');\n//             setSuccessMssg('');\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <title>Registration Page</title>  \n//             <header>\n//                 <nav className=\"navbar\">\n//                     <h1>Bank of Banks</h1>\n//                 </nav>\n//             </header>\n\n//             <h2>Application</h2>\n//             <h4>Welcome. Apply in just minutes.</h4>\n\n//             <form onSubmit={submission}>\n//                 {/* Form Fields */}\n//                 <div>\n//                     <label> Last Name:</label>\n//                     <input type=\"text\" value={LastName} onChange={(e) => setLastName(e.target.value)} required />\n//                 </div>\n\n//                 <div>\n//                     <label> First Name:</label>\n//                     <input type=\"text\" value={FirstName} onChange={(e) => setFirstName(e.target.value)} required />\n//                 </div>\n\n//                 <div>\n//                     <label> Username:</label>\n//                     <input type=\"text\" value={Username} onChange={(e) => setUsername(e.target.value)} required />\n//                 </div>\n\n//                 <div>\n//                     <label>Email:</label>\n//                     <input type=\"email\" value={Email} onChange={(e) => setEmail(e.target.value)} required />\n//                 </div>\n\n//                 <div>\n//                     <label>Password:</label>\n//                     <input type=\"password\" value={Password} onChange={(e) => setPw(e.target.value)} required />\n//                 </div>\n\n//                 <div>\n//                     <label>Confirm Password:</label>\n//                     <input type=\"password\" value={ConfirmPassword} onChange={(e) => setConfirmPw(e.target.value)} required />\n//                 </div>\n\n//                 <div className=\"button\" onClick={() => console.log('Button clicked!')}>\n//                    Submit\n// </div>\n\n//                {errorMssg && <p style={{ color: 'red' }}>{errorMssg}</p>}\n//                {successMssg && <p style={{ color: 'green' }}>{successMssg}</p>}\n//            </form>\n\n//            <a\n//    href=\"/\"\n//    style={{\n//        display: 'block', \n//        textAlign: 'center',\n//        margin: '20px auto',\n//        color: 'blue',\n//        textDecoration: 'underline'\n\n//    }}\n// >\n//    Cancel\n// </a>\n//                 <a\n//    href=\"/\"\n//    style={{\n//        display: 'block',\n//        textAlign: 'center',\n//        margin: '20px auto',\n//        color: 'blue',\n//        textDecoration: 'underline'\n\n//    }}\n// >\n//    Save\n// </a>\n//         </div>\n//     );\n// };\n\n// export default Registration;\nvar _c;\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","Registration","_s","LastName","setLastName","FirstName","setFirstName","Username","setUsername","Email","setEmail","Password","setPw","ConfirmPassword","setConfirmPw","Pin","setPin","ConfirmPin","setConfirmPin","errorMssg","setErrorMssg","successMssg","setSuccessMssg","navigate","validateInput","test","validChars","submission","event","preventDefault","emailCheckResponse","get","params","email","post","error","handleCancel","style","fontFamily","margin","children","backgroundColor","padding","color","textAlign","fontWeight","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","onSubmit","display","gridTemplateColumns","gap","maxWidth","type","value","onChange","e","target","required","borderRadius","border","width","gridColumn","maxLength","cursor","href","onClick","textDecoration","_c","$RefreshReg$"],"sources":["C:/Users/peril/Documents/GitHub/CMPE-131-Group-2/frontend/online-banking/src/pages/Registration.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Registration = () => {\r\n    // Declare states to store the values ​​of input fields\r\n    const [LastName, setLastName] = useState<string>(''); //user's Last name \r\n    const [FirstName, setFirstName] = useState<string>(''); // First name\r\n    const [Username, setUsername] = useState<string>(''); // user login name\r\n    const [Email, setEmail] = useState<string>(''); //email\r\n    const [Password, setPw] = useState<string>(''); //password\r\n    const [ConfirmPassword, setConfirmPw] = useState<string>(''); //Confirm Password\r\n    const [Pin, setPin] = useState<string>(''); //Pin\r\n    const [ConfirmPin, setConfirmPin] = useState<string>(''); //Confirm PIN\r\n    const [errorMssg, setErrorMssg] = useState<string>(''); //Error messages\r\n    const [successMssg, setSuccessMssg] = useState<string>(''); //success messages\r\n    const navigate = useNavigate(); \r\n\r\n    // The validateInput function checks the validity of user input data\r\n    const validateInput = () => {\r\n        // Check email format\r\n        if (!/^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$/.test(Email)) {\r\n            setErrorMssg('Invalid email format.');\r\n            return false;\r\n        }\r\n\r\n      const validChars = /^[A-Za-z0-9!*]*$/;\r\n        // Check valid characters in Username and Password\r\n        if (!validChars.test(Username) || !validChars.test(Password)) {\r\n            setErrorMssg('Please try again!');\r\n            return false;\r\n        }\r\n        // Check if Password and ConfirmPassword match\r\n        if (Password !== ConfirmPassword) {\r\n            setErrorMssg('Password and Confirm Password do not match.');\r\n            return false;\r\n        }\r\n        // Check if Pin and ConfirmPin match\r\n        if (Pin !== ConfirmPin) {\r\n            setErrorMssg('PIN and Confirm PIN do not match.');\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    \r\n\r\n    // Function to handle when the user submits the form\r\n    const submission = async (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        // Stop if data is invalid\r\n        if (!validateInput()) {\r\n            return; \r\n        }\r\n\r\n        try {\r\n            // Send a request to check if the email already exists\r\n            const emailCheckResponse = await axios.get('http://localhost:3000',\r\n            {\r\n                params: { email: Email },\r\n            });\r\n\r\n            // Send new account registration request\r\n            await axios.post('http://localhost:3000/registration', {\r\n                LastName,\r\n                FirstName,\r\n                Username,\r\n                Email,\r\n                Password,\r\n                Pin,\r\n            });\r\n            // Successful registration notification and redirection to Hompage\r\n            setSuccessMssg('Congratulations! Registration successful!'); \r\n            setErrorMssg('');\r\n\r\n      \r\n            \r\n           \r\n        } catch (error) { \r\n            // Handle errors when registration fails\r\n            setErrorMssg('Registration failed. Please try again.');\r\n            setSuccessMssg('');\r\n        }\r\n    };\r\n\r\n const handleCancel = () => {\r\n\r\n    navigate('/Homepage');  // return to homepage\r\n  };\r\n\r\n    return (\r\n        <div style={{ fontFamily: 'Arial, sans-serif', margin: 0 }}>\r\n            <header>\r\n                <nav style={{\r\n                    backgroundColor: '#003459',\r\n                    padding: '30px',\r\n                    color: 'white',\r\n                    textAlign: 'center'\r\n                }}>\r\n                    <h1 style={{fontWeight: 'bold', fontSize: '30px'}}>Bank of Banks</h1>\r\n                </nav>\r\n            </header>\r\n            \r\n            <h2 style={{ textAlign: 'center', fontWeight: 'normal', fontSize: '25px', marginTop: '20px' }}>Welcome, apply in just minutes.</h2>\r\n\r\n            <form onSubmit={submission} style={{\r\n                display: 'grid',\r\n                gridTemplateColumns: '1fr 1fr',\r\n                gap: '20px', // Added gap between elements\r\n                maxWidth: '600px',\r\n                margin: '20px auto'\r\n            }}>\r\n                \r\n                <div\r\n                    style={{\r\n                        margin: 10\r\n                    }}>\r\n                    <label>First Name:</label>\r\n                    <input\r\n                        //for the First Name\r\n                        type=\"text\"\r\n                        value={FirstName}\r\n                        onChange={(e) => setFirstName(e.target.value)}\r\n                        required\r\n                        style={{\r\n                            padding: '10px',\r\n                            backgroundColor: '#D3D3D3',\r\n                            fontSize: '20px',\r\n                            borderRadius: '4px',\r\n                            border: '1px solid #809AAC',\r\n                            width: '100%',\r\n                            marginTop: '5px' \r\n                        }}\r\n                    />\r\n                </div>\r\n\r\n                <div\r\n                    style={{\r\n                        margin: 10\r\n                    }}>\r\n                    \r\n                    <label>Last Name:</label>\r\n                    <input\r\n                        //for the Last Name\r\n                        type=\"text\"\r\n                        value={LastName}\r\n                        onChange={(e) => setLastName(e.target.value)}\r\n                        required\r\n                        style={{\r\n                            padding: '10px',\r\n                            backgroundColor: '#D3D3D3',\r\n                            fontSize: '20px',\r\n                            borderRadius: '4px',\r\n                            border: '1px solid #809AAC',\r\n                            width: '100%',\r\n                            marginTop: '5px'\r\n                        }}\r\n                    />\r\n                </div>\r\n                \r\n                <div style={{ gridColumn: '1 / 3', margin: 10 }}>\r\n                    <label>Username:</label>\r\n                    <input\r\n                        //for the username\r\n                        type=\"text\"\r\n                        value={Username}\r\n                        onChange={(e) => setUsername(e.target.value)}\r\n                        required\r\n                        style={{\r\n                            padding: '10px',\r\n                            backgroundColor: '#D3D3D3',\r\n                            fontSize: '20px',\r\n                            borderRadius: '4px',\r\n                            border: '1px solid #809AAC',\r\n                            width: '100%',\r\n                            marginTop: '5px'\r\n                        }}\r\n                    />\r\n                </div>\r\n\r\n                <div style={{ gridColumn: '1 / 3', margin: 10 }}>\r\n                    <label>Email:</label>\r\n                    <input\r\n                       //for the Email \r\n                        type=\"email\"\r\n                        value={Email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        required\r\n                        style={{\r\n                            padding: '10px',\r\n                            backgroundColor: '#D3D3D3',\r\n                            fontSize: '20px',\r\n                            borderRadius: '4px',\r\n                            border: '1px solid #809AAC',\r\n                            width: '100%',\r\n                            marginTop: '5px'\r\n                        }}\r\n                    />\r\n                </div>\r\n\r\n                <div\r\n                    style={{\r\n                        margin: 10\r\n                    }}>\r\n                    <label>Password:</label>\r\n                    <input\r\n                        //for the password\r\n                        type=\"password\"\r\n                        value={Password}\r\n                        onChange={(e) => setPw(e.target.value)}\r\n                        required\r\n                        style={{\r\n                            padding: '10px',\r\n                            backgroundColor: '#D3D3D3',\r\n                            fontSize: '20px',\r\n                            borderRadius: '4px',\r\n                            border: '1px solid #809AAC',\r\n                            width: '100%',\r\n                            marginTop: '5px'\r\n                        }}\r\n                    />\r\n                </div>\r\n\r\n                <div\r\n                    style={{\r\n                        margin: 10\r\n                    }}>\r\n                    <label>Confirm Password:</label>\r\n                    <input\r\n                        //for the confirmPassword\r\n                        type=\"password\"\r\n                        value={ConfirmPassword}\r\n                        onChange={(e) => setConfirmPw(e.target.value)}\r\n                        required\r\n                        style={{\r\n                            padding: '10px',\r\n                            backgroundColor: '#D3D3D3',\r\n                            fontSize: '20px',\r\n                            borderRadius: '4px',\r\n                            border: '1px solid #809AAC',\r\n                            width: '100%',\r\n                            marginTop: '5px'\r\n                        }}\r\n                    />\r\n                </div>\r\n\r\n            \r\n                <div\r\n                    style={{\r\n                        margin: 10\r\n                    }}>\r\n                    <label>PIN:</label>\r\n                    <input\r\n                        //for the PIN\r\n                        type=\"password\"\r\n                        value={Pin}\r\n                        onChange={(e) => setPin(e.target.value)}\r\n                        required\r\n                        maxLength={4}\r\n                        style={{\r\n                            padding: '10px',\r\n                            backgroundColor: '#D3D3D3',\r\n                            fontSize: '20px',\r\n                            borderRadius: '4px',\r\n                            border: '1px solid #809AAC',\r\n                            width: '100%',\r\n                            marginTop: '5px'\r\n                        }}\r\n                    />\r\n                </div>\r\n\r\n          \r\n\r\n                <div\r\n                    style={{\r\n                        margin: 10\r\n                    }}>\r\n                    <label>Confirm PIN:</label>\r\n                    <input\r\n                        //for the confirmPIN\r\n                        type=\"password\"\r\n                        value={ConfirmPin}\r\n                        onChange={(e) => setConfirmPin(e.target.value)}\r\n                        required\r\n                        maxLength={4}\r\n                        style={{\r\n                            padding: '10px',\r\n                            backgroundColor: '#D3D3D3',\r\n                            fontSize: '20px',\r\n                            borderRadius: '4px',\r\n                            border: '1px solid #809AAC',\r\n                            width: '100%',\r\n                            marginTop: '5px'\r\n                        }}\r\n                    />\r\n                </div>\r\n\r\n                \r\n                <div style={{ gridColumn: '1 / 3', textAlign: 'center', marginTop: '20px' }}>\r\n                    <button type=\"submit\" style={{\r\n                        width: '30%',\r\n                        padding: '10px',\r\n                        backgroundColor: '#003459',\r\n                        color: 'white',\r\n                        border: 'none',\r\n                        borderRadius: '4px',\r\n                        cursor: 'pointer',\r\n                        fontWeight: 'bold',\r\n                        fontSize: '16px'\r\n                    }}>\r\n                          {/* This is the \"Submit\" button. */}\r\n                        Submit\r\n                    </button>\r\n                </div>\r\n\r\n                  {/* for the error messages and success messages */}\r\n                {errorMssg && <p style={{ color: 'red', textAlign: 'center', gridColumn: '1 / 3' }}>{errorMssg}</p>}\r\n                {successMssg && <p style={{ color: 'green', textAlign: 'center', gridColumn: '1 / 3' }}>{successMssg}</p>}\r\n            </form>\r\n\r\n            <div style={{ textAlign: 'center', margin: '20px auto' }}>\r\n\r\n                \r\n                <a href=\"/\" onClick={handleCancel} style={{ color: 'blue', textDecoration: 'underline' }}>Cancel\r\n                {/* This is the \"Cancel\" button */}\r\n                </a>\r\n                <span> | </span>\r\n               \r\n                //<a href=\"/\" style={{ color: 'blue', textDecoration: 'underline' }}>Save</a>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Registration;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import './Registration.css';\r\n\r\n// const Registration = () => {\r\n//     const [LastName, setLastName] = useState<string>('');\r\n//     const [FirstName, setFirstName] = useState<string>('');\r\n//     const [Username, setUsername] = useState<string>('');\r\n//     const [Email, setEmail] = useState<string>('');\r\n//     const [Password, setPw] = useState<string>('');\r\n//     const [ConfirmPassword, setConfirmPw] = useState<string>('');\r\n//     const [errorMssg, setErrorMssg] = useState<string>('');\r\n//     const [successMssg, setSuccessMssg] = useState<string>('');\r\n//     const navigate = useNavigate(); \r\n\r\n//     const validateInput = () => {\r\n//         // test email\r\n//         if (!/^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$/.test(Email)) {\r\n//             setErrorMssg('Invalid email format.');\r\n//             return false;\r\n//         }\r\n\r\n//         // test username/password\r\n//         const validChars = /^[A-Za-z0-9!*]*$/;\r\n//         if (!validChars.test(Username) || !validChars.test(Password)) {\r\n//             setErrorMssg('Username and password must contain only A-Z, a-z, 0-9, or !-* characters.');\r\n//             return false;\r\n//         }\r\n\r\n//         if (Password !== ConfirmPassword) {\r\n//             setErrorMssg('Password and Confirm Password do not match.');\r\n//             return false;\r\n//         }\r\n\r\n//         return true;\r\n//     };\r\n\r\n//     const submission = async (event: React.FormEvent<HTMLFormElement>) => {\r\n//         event.preventDefault();\r\n\r\n//         if (!validateInput()) {\r\n//             return; \r\n//         }\r\n\r\n//         try {\r\n//             const emailCheckResponse = await axios.get(`http://localhost:3000}`);\r\n            \r\n//             if (emailCheckResponse.data.exists) {\r\n//                 setErrorMssg('Email is already registered!');\r\n//                 setSuccessMssg('');\r\n//                 return;\r\n//             }\r\n\r\n//             await axios.post('http://localhost:3000/registration', {\r\n//                 LastName,\r\n//                 FirstName,\r\n//                 Username,\r\n//                 Email,\r\n//                 Password,\r\n//             });\r\n\r\n//             setSuccessMssg('Congratulation! Registration successful!'); \r\n//             setErrorMssg('');\r\n            \r\n//             navigate('/Homepage'); \r\n//         } catch (error) { \r\n//             setErrorMssg('Registration failed. Please try again.');\r\n//             setSuccessMssg('');\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <title>Registration Page</title>  \r\n//             <header>\r\n//                 <nav className=\"navbar\">\r\n//                     <h1>Bank of Banks</h1>\r\n//                 </nav>\r\n//             </header>\r\n            \r\n//             <h2>Application</h2>\r\n//             <h4>Welcome. Apply in just minutes.</h4>\r\n\r\n//             <form onSubmit={submission}>\r\n//                 {/* Form Fields */}\r\n//                 <div>\r\n//                     <label> Last Name:</label>\r\n//                     <input type=\"text\" value={LastName} onChange={(e) => setLastName(e.target.value)} required />\r\n//                 </div>\r\n\r\n//                 <div>\r\n//                     <label> First Name:</label>\r\n//                     <input type=\"text\" value={FirstName} onChange={(e) => setFirstName(e.target.value)} required />\r\n//                 </div>\r\n\r\n//                 <div>\r\n//                     <label> Username:</label>\r\n//                     <input type=\"text\" value={Username} onChange={(e) => setUsername(e.target.value)} required />\r\n//                 </div>\r\n\r\n//                 <div>\r\n//                     <label>Email:</label>\r\n//                     <input type=\"email\" value={Email} onChange={(e) => setEmail(e.target.value)} required />\r\n//                 </div>\r\n         \r\n//                 <div>\r\n//                     <label>Password:</label>\r\n//                     <input type=\"password\" value={Password} onChange={(e) => setPw(e.target.value)} required />\r\n//                 </div>\r\n                \r\n//                 <div>\r\n//                     <label>Confirm Password:</label>\r\n//                     <input type=\"password\" value={ConfirmPassword} onChange={(e) => setConfirmPw(e.target.value)} required />\r\n//                 </div>\r\n\r\n//                 <div className=\"button\" onClick={() => console.log('Button clicked!')}>\r\n//                    Submit\r\n// </div>\r\n\r\n\r\n//                {errorMssg && <p style={{ color: 'red' }}>{errorMssg}</p>}\r\n//                {successMssg && <p style={{ color: 'green' }}>{successMssg}</p>}\r\n//            </form>\r\n\r\n\r\n         \r\n//            <a\r\n//    href=\"/\"\r\n//    style={{\r\n//        display: 'block', \r\n//        textAlign: 'center',\r\n//        margin: '20px auto',\r\n//        color: 'blue',\r\n//        textDecoration: 'underline'\r\n      \r\n//    }}\r\n// >\r\n//    Cancel\r\n// </a>\r\n//                 <a\r\n//    href=\"/\"\r\n//    style={{\r\n//        display: 'block',\r\n//        textAlign: 'center',\r\n//        margin: '20px auto',\r\n//        color: 'blue',\r\n//        textDecoration: 'underline'\r\n      \r\n//    }}\r\n// >\r\n//    Save\r\n// </a>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default Registration;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAS,EAAE,CAAC,CAAC,CAAC;EACtD,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAS,EAAE,CAAC,CAAC,CAAC;EACxD,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAS,EAAE,CAAC,CAAC,CAAC;EACtD,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAS,EAAE,CAAC,CAAC,CAAC;EAChD,MAAM,CAACe,QAAQ,EAAEC,KAAK,CAAC,GAAGhB,QAAQ,CAAS,EAAE,CAAC,CAAC,CAAC;EAChD,MAAM,CAACiB,eAAe,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAS,EAAE,CAAC,CAAC,CAAC;EAC9D,MAAM,CAACmB,GAAG,EAAEC,MAAM,CAAC,GAAGpB,QAAQ,CAAS,EAAE,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACqB,UAAU,EAAEC,aAAa,CAAC,GAAGtB,QAAQ,CAAS,EAAE,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACuB,SAAS,EAAEC,YAAY,CAAC,GAAGxB,QAAQ,CAAS,EAAE,CAAC,CAAC,CAAC;EACxD,MAAM,CAACyB,WAAW,EAAEC,cAAc,CAAC,GAAG1B,QAAQ,CAAS,EAAE,CAAC,CAAC,CAAC;EAC5D,MAAM2B,QAAQ,GAAGzB,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAM0B,aAAa,GAAGA,CAAA,KAAM;IACxB;IACA,IAAI,CAAC,kDAAkD,CAACC,IAAI,CAAChB,KAAK,CAAC,EAAE;MACjEW,YAAY,CAAC,uBAAuB,CAAC;MACrC,OAAO,KAAK;IAChB;IAEF,MAAMM,UAAU,GAAG,kBAAkB;IACnC;IACA,IAAI,CAACA,UAAU,CAACD,IAAI,CAAClB,QAAQ,CAAC,IAAI,CAACmB,UAAU,CAACD,IAAI,CAACd,QAAQ,CAAC,EAAE;MAC1DS,YAAY,CAAC,mBAAmB,CAAC;MACjC,OAAO,KAAK;IAChB;IACA;IACA,IAAIT,QAAQ,KAAKE,eAAe,EAAE;MAC9BO,YAAY,CAAC,6CAA6C,CAAC;MAC3D,OAAO,KAAK;IAChB;IACA;IACA,IAAIL,GAAG,KAAKE,UAAU,EAAE;MACpBG,YAAY,CAAC,mCAAmC,CAAC;MACjD,OAAO,KAAK;IAChB;IAEA,OAAO,IAAI;EACf,CAAC;;EAID;EACA,MAAMO,UAAU,GAAG,MAAOC,KAAuC,IAAK;IAClEA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB;IACA,IAAI,CAACL,aAAa,CAAC,CAAC,EAAE;MAClB;IACJ;IAEA,IAAI;MACA;MACA,MAAMM,kBAAkB,GAAG,MAAMjC,KAAK,CAACkC,GAAG,CAAC,uBAAuB,EAClE;QACIC,MAAM,EAAE;UAAEC,KAAK,EAAExB;QAAM;MAC3B,CAAC,CAAC;;MAEF;MACA,MAAMZ,KAAK,CAACqC,IAAI,CAAC,oCAAoC,EAAE;QACnD/B,QAAQ;QACRE,SAAS;QACTE,QAAQ;QACRE,KAAK;QACLE,QAAQ;QACRI;MACJ,CAAC,CAAC;MACF;MACAO,cAAc,CAAC,2CAA2C,CAAC;MAC3DF,YAAY,CAAC,EAAE,CAAC;IAKpB,CAAC,CAAC,OAAOe,KAAK,EAAE;MACZ;MACAf,YAAY,CAAC,wCAAwC,CAAC;MACtDE,cAAc,CAAC,EAAE,CAAC;IACtB;EACJ,CAAC;EAEJ,MAAMc,YAAY,GAAGA,CAAA,KAAM;IAExBb,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAE;EAC1B,CAAC;EAEC,oBACIvB,OAAA;IAAKqC,KAAK,EAAE;MAAEC,UAAU,EAAE,mBAAmB;MAAEC,MAAM,EAAE;IAAE,CAAE;IAAAC,QAAA,gBACvDxC,OAAA;MAAAwC,QAAA,eACIxC,OAAA;QAAKqC,KAAK,EAAE;UACRI,eAAe,EAAE,SAAS;UAC1BC,OAAO,EAAE,MAAM;UACfC,KAAK,EAAE,OAAO;UACdC,SAAS,EAAE;QACf,CAAE;QAAAJ,QAAA,eACExC,OAAA;UAAIqC,KAAK,EAAE;YAACQ,UAAU,EAAE,MAAM;YAAEC,QAAQ,EAAE;UAAM,CAAE;UAAAN,QAAA,EAAC;QAAa;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eAETlD,OAAA;MAAIqC,KAAK,EAAE;QAAEO,SAAS,EAAE,QAAQ;QAAEC,UAAU,EAAE,QAAQ;QAAEC,QAAQ,EAAE,MAAM;QAAEK,SAAS,EAAE;MAAO,CAAE;MAAAX,QAAA,EAAC;IAA+B;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEnIlD,OAAA;MAAMoD,QAAQ,EAAEzB,UAAW;MAACU,KAAK,EAAE;QAC/BgB,OAAO,EAAE,MAAM;QACfC,mBAAmB,EAAE,SAAS;QAC9BC,GAAG,EAAE,MAAM;QAAE;QACbC,QAAQ,EAAE,OAAO;QACjBjB,MAAM,EAAE;MACZ,CAAE;MAAAC,QAAA,gBAEExC,OAAA;QACIqC,KAAK,EAAE;UACHE,MAAM,EAAE;QACZ,CAAE;QAAAC,QAAA,gBACFxC,OAAA;UAAAwC,QAAA,EAAO;QAAW;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC1BlD,OAAA;UACI;UACAyD,IAAI,EAAC,MAAM;UACXC,KAAK,EAAErD,SAAU;UACjBsD,QAAQ,EAAGC,CAAC,IAAKtD,YAAY,CAACsD,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC9CI,QAAQ;UACRzB,KAAK,EAAE;YACHK,OAAO,EAAE,MAAM;YACfD,eAAe,EAAE,SAAS;YAC1BK,QAAQ,EAAE,MAAM;YAChBiB,YAAY,EAAE,KAAK;YACnBC,MAAM,EAAE,mBAAmB;YAC3BC,KAAK,EAAE,MAAM;YACbd,SAAS,EAAE;UACf;QAAE;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAENlD,OAAA;QACIqC,KAAK,EAAE;UACHE,MAAM,EAAE;QACZ,CAAE;QAAAC,QAAA,gBAEFxC,OAAA;UAAAwC,QAAA,EAAO;QAAU;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACzBlD,OAAA;UACI;UACAyD,IAAI,EAAC,MAAM;UACXC,KAAK,EAAEvD,QAAS;UAChBwD,QAAQ,EAAGC,CAAC,IAAKxD,WAAW,CAACwD,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC7CI,QAAQ;UACRzB,KAAK,EAAE;YACHK,OAAO,EAAE,MAAM;YACfD,eAAe,EAAE,SAAS;YAC1BK,QAAQ,EAAE,MAAM;YAChBiB,YAAY,EAAE,KAAK;YACnBC,MAAM,EAAE,mBAAmB;YAC3BC,KAAK,EAAE,MAAM;YACbd,SAAS,EAAE;UACf;QAAE;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAENlD,OAAA;QAAKqC,KAAK,EAAE;UAAE6B,UAAU,EAAE,OAAO;UAAE3B,MAAM,EAAE;QAAG,CAAE;QAAAC,QAAA,gBAC5CxC,OAAA;UAAAwC,QAAA,EAAO;QAAS;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACxBlD,OAAA;UACI;UACAyD,IAAI,EAAC,MAAM;UACXC,KAAK,EAAEnD,QAAS;UAChBoD,QAAQ,EAAGC,CAAC,IAAKpD,WAAW,CAACoD,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC7CI,QAAQ;UACRzB,KAAK,EAAE;YACHK,OAAO,EAAE,MAAM;YACfD,eAAe,EAAE,SAAS;YAC1BK,QAAQ,EAAE,MAAM;YAChBiB,YAAY,EAAE,KAAK;YACnBC,MAAM,EAAE,mBAAmB;YAC3BC,KAAK,EAAE,MAAM;YACbd,SAAS,EAAE;UACf;QAAE;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAENlD,OAAA;QAAKqC,KAAK,EAAE;UAAE6B,UAAU,EAAE,OAAO;UAAE3B,MAAM,EAAE;QAAG,CAAE;QAAAC,QAAA,gBAC5CxC,OAAA;UAAAwC,QAAA,EAAO;QAAM;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACrBlD,OAAA;UACG;UACCyD,IAAI,EAAC,OAAO;UACZC,KAAK,EAAEjD,KAAM;UACbkD,QAAQ,EAAGC,CAAC,IAAKlD,QAAQ,CAACkD,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC1CI,QAAQ;UACRzB,KAAK,EAAE;YACHK,OAAO,EAAE,MAAM;YACfD,eAAe,EAAE,SAAS;YAC1BK,QAAQ,EAAE,MAAM;YAChBiB,YAAY,EAAE,KAAK;YACnBC,MAAM,EAAE,mBAAmB;YAC3BC,KAAK,EAAE,MAAM;YACbd,SAAS,EAAE;UACf;QAAE;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAENlD,OAAA;QACIqC,KAAK,EAAE;UACHE,MAAM,EAAE;QACZ,CAAE;QAAAC,QAAA,gBACFxC,OAAA;UAAAwC,QAAA,EAAO;QAAS;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACxBlD,OAAA;UACI;UACAyD,IAAI,EAAC,UAAU;UACfC,KAAK,EAAE/C,QAAS;UAChBgD,QAAQ,EAAGC,CAAC,IAAKhD,KAAK,CAACgD,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UACvCI,QAAQ;UACRzB,KAAK,EAAE;YACHK,OAAO,EAAE,MAAM;YACfD,eAAe,EAAE,SAAS;YAC1BK,QAAQ,EAAE,MAAM;YAChBiB,YAAY,EAAE,KAAK;YACnBC,MAAM,EAAE,mBAAmB;YAC3BC,KAAK,EAAE,MAAM;YACbd,SAAS,EAAE;UACf;QAAE;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAENlD,OAAA;QACIqC,KAAK,EAAE;UACHE,MAAM,EAAE;QACZ,CAAE;QAAAC,QAAA,gBACFxC,OAAA;UAAAwC,QAAA,EAAO;QAAiB;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAChClD,OAAA;UACI;UACAyD,IAAI,EAAC,UAAU;UACfC,KAAK,EAAE7C,eAAgB;UACvB8C,QAAQ,EAAGC,CAAC,IAAK9C,YAAY,CAAC8C,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC9CI,QAAQ;UACRzB,KAAK,EAAE;YACHK,OAAO,EAAE,MAAM;YACfD,eAAe,EAAE,SAAS;YAC1BK,QAAQ,EAAE,MAAM;YAChBiB,YAAY,EAAE,KAAK;YACnBC,MAAM,EAAE,mBAAmB;YAC3BC,KAAK,EAAE,MAAM;YACbd,SAAS,EAAE;UACf;QAAE;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAGNlD,OAAA;QACIqC,KAAK,EAAE;UACHE,MAAM,EAAE;QACZ,CAAE;QAAAC,QAAA,gBACFxC,OAAA;UAAAwC,QAAA,EAAO;QAAI;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACnBlD,OAAA;UACI;UACAyD,IAAI,EAAC,UAAU;UACfC,KAAK,EAAE3C,GAAI;UACX4C,QAAQ,EAAGC,CAAC,IAAK5C,MAAM,CAAC4C,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UACxCI,QAAQ;UACRK,SAAS,EAAE,CAAE;UACb9B,KAAK,EAAE;YACHK,OAAO,EAAE,MAAM;YACfD,eAAe,EAAE,SAAS;YAC1BK,QAAQ,EAAE,MAAM;YAChBiB,YAAY,EAAE,KAAK;YACnBC,MAAM,EAAE,mBAAmB;YAC3BC,KAAK,EAAE,MAAM;YACbd,SAAS,EAAE;UACf;QAAE;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAINlD,OAAA;QACIqC,KAAK,EAAE;UACHE,MAAM,EAAE;QACZ,CAAE;QAAAC,QAAA,gBACFxC,OAAA;UAAAwC,QAAA,EAAO;QAAY;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC3BlD,OAAA;UACI;UACAyD,IAAI,EAAC,UAAU;UACfC,KAAK,EAAEzC,UAAW;UAClB0C,QAAQ,EAAGC,CAAC,IAAK1C,aAAa,CAAC0C,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC/CI,QAAQ;UACRK,SAAS,EAAE,CAAE;UACb9B,KAAK,EAAE;YACHK,OAAO,EAAE,MAAM;YACfD,eAAe,EAAE,SAAS;YAC1BK,QAAQ,EAAE,MAAM;YAChBiB,YAAY,EAAE,KAAK;YACnBC,MAAM,EAAE,mBAAmB;YAC3BC,KAAK,EAAE,MAAM;YACbd,SAAS,EAAE;UACf;QAAE;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAGNlD,OAAA;QAAKqC,KAAK,EAAE;UAAE6B,UAAU,EAAE,OAAO;UAAEtB,SAAS,EAAE,QAAQ;UAAEO,SAAS,EAAE;QAAO,CAAE;QAAAX,QAAA,eACxExC,OAAA;UAAQyD,IAAI,EAAC,QAAQ;UAACpB,KAAK,EAAE;YACzB4B,KAAK,EAAE,KAAK;YACZvB,OAAO,EAAE,MAAM;YACfD,eAAe,EAAE,SAAS;YAC1BE,KAAK,EAAE,OAAO;YACdqB,MAAM,EAAE,MAAM;YACdD,YAAY,EAAE,KAAK;YACnBK,MAAM,EAAE,SAAS;YACjBvB,UAAU,EAAE,MAAM;YAClBC,QAAQ,EAAE;UACd,CAAE;UAAAN,QAAA,EACwC;QAE1C;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,EAGL/B,SAAS,iBAAInB,OAAA;QAAGqC,KAAK,EAAE;UAAEM,KAAK,EAAE,KAAK;UAAEC,SAAS,EAAE,QAAQ;UAAEsB,UAAU,EAAE;QAAQ,CAAE;QAAA1B,QAAA,EAAErB;MAAS;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAClG7B,WAAW,iBAAIrB,OAAA;QAAGqC,KAAK,EAAE;UAAEM,KAAK,EAAE,OAAO;UAAEC,SAAS,EAAE,QAAQ;UAAEsB,UAAU,EAAE;QAAQ,CAAE;QAAA1B,QAAA,EAAEnB;MAAW;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvG,CAAC,eAEPlD,OAAA;MAAKqC,KAAK,EAAE;QAAEO,SAAS,EAAE,QAAQ;QAAEL,MAAM,EAAE;MAAY,CAAE;MAAAC,QAAA,gBAGrDxC,OAAA;QAAGqE,IAAI,EAAC,GAAG;QAACC,OAAO,EAAElC,YAAa;QAACC,KAAK,EAAE;UAAEM,KAAK,EAAE,MAAM;UAAE4B,cAAc,EAAE;QAAY,CAAE;QAAA/B,QAAA,EAAC;MAC1F;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACJlD,OAAA;QAAAwC,QAAA,EAAM;MAAG;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,MAEd,eAAAlD,OAAA;QAAGqE,IAAI,EAAC,GAAG;QAAChC,KAAK,EAAE;UAAEM,KAAK,EAAE,MAAM;UAAE4B,cAAc,EAAE;QAAY,CAAE;QAAA/B,QAAA,EAAC;MAAI;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5E,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAChD,EAAA,CAzUID,YAAY;EAAA,QAYGH,WAAW;AAAA;AAAA0E,EAAA,GAZ1BvE,YAAY;AA2UlB,eAAeA,YAAY;;AAS3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAuE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}